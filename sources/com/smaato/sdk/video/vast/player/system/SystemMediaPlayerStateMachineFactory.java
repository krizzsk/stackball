package com.smaato.sdk.video.vast.player.system;

import com.smaato.sdk.core.util.StateMachine;
import com.smaato.sdk.video.vast.player.MediaPlayerState;
import com.smaato.sdk.video.vast.player.MediaPlayerTransition;
import java.util.Arrays;

public class SystemMediaPlayerStateMachineFactory {
    private final MediaPlayerState initialState;

    public SystemMediaPlayerStateMachineFactory(MediaPlayerState mediaPlayerState) {
        this.initialState = mediaPlayerState;
    }

    public StateMachine<MediaPlayerTransition, MediaPlayerState> create() {
        StateMachine.Builder builder = new StateMachine.Builder();
        builder.setInitialState(this.initialState).addTransition(MediaPlayerTransition.SET_DATA_SOURCE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.IDLE, MediaPlayerState.INITIALIZED})).addTransition(MediaPlayerTransition.PREPARE_ASYNC, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.INITIALIZED, MediaPlayerState.PREPARING})).addTransition(MediaPlayerTransition.PREPARE_ASYNC, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STOPPED, MediaPlayerState.PREPARING})).addTransition(MediaPlayerTransition.ON_PREPARED, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARING, MediaPlayerState.PREPARED})).addTransition(MediaPlayerTransition.START, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARED, MediaPlayerState.STARTED})).addTransition(MediaPlayerTransition.STOP, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARED, MediaPlayerState.STOPPED}));
        builder.addTransition(MediaPlayerTransition.STOP, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PLAYBACK_COMPLETED, MediaPlayerState.STOPPED}));
        builder.addTransition(MediaPlayerTransition.STOP, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STARTED, MediaPlayerState.STOPPED})).addTransition(MediaPlayerTransition.PAUSE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STARTED, MediaPlayerState.PAUSED})).addTransition(MediaPlayerTransition.ON_COMPLETE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STARTED, MediaPlayerState.PLAYBACK_COMPLETED}));
        builder.addTransition(MediaPlayerTransition.STOP, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.RESUMED, MediaPlayerState.STOPPED})).addTransition(MediaPlayerTransition.PAUSE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.RESUMED, MediaPlayerState.PAUSED})).addTransition(MediaPlayerTransition.ON_COMPLETE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.RESUMED, MediaPlayerState.PLAYBACK_COMPLETED}));
        builder.addTransition(MediaPlayerTransition.STOP, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PAUSED, MediaPlayerState.STOPPED})).addTransition(MediaPlayerTransition.START, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PAUSED, MediaPlayerState.RESUMED}));
        builder.addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.IDLE, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.INITIALIZED, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARING, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARED, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STARTED, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.RESUMED, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PAUSED, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STOPPED, MediaPlayerState.ERROR})).addTransition(MediaPlayerTransition.ON_ERROR, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PLAYBACK_COMPLETED, MediaPlayerState.ERROR}));
        builder.addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.ERROR, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.INITIALIZED, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARED, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARING, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STARTED, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.RESUMED, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STOPPED, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PAUSED, MediaPlayerState.IDLE})).addTransition(MediaPlayerTransition.RESET, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PLAYBACK_COMPLETED, MediaPlayerState.IDLE}));
        builder.addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.IDLE, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.ERROR, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.INITIALIZED, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARED, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PREPARING, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STARTED, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.RESUMED, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.STOPPED, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PAUSED, MediaPlayerState.END})).addTransition(MediaPlayerTransition.RELEASE, Arrays.asList(new MediaPlayerState[]{MediaPlayerState.PLAYBACK_COMPLETED, MediaPlayerState.END}));
        return builder.build();
    }
}
